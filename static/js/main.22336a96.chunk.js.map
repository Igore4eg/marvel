{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoudary/ErrorBoudary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","Spinner","background","justifyContent","SpinnerCircular","size","thickness","speed","color","secondaryColor","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","console","log","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","prevState","skeleton","resourceURI","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22336a96.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"https://developer.marvel.com/docs#!/public/getCreatorCollection_get_0\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"https://developer.marvel.com/docs#!/public/getCreatorCollection_get_0\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"https://developer.marvel.com/docs#!/public/getCreatorCollection_get_0\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","class MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=8af2845f0342a6f8105c592982490a5e';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter)\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description : char.description ? `${char.description.slice(0, 210)}...` : 'No description',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nclass RandomChar extends Component {\r\n    \r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelService\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }    \r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n        \r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n        \r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br/>\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\" onClick={this.updateChar}>\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )    \r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{margin: 'auto', background: 'none', display: 'flex', justifyContent: 'center'}}>\r\n            <SpinnerCircular size={60} thickness={155} speed={121} color=\"rgba(159, 0, 19, 1)\" secondaryColor=\"rgba(172, 57, 57, 0.48)\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport './charList.scss';\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemLoading: false,\r\n        offset: 210,\r\n        charEnded: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequest();\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading();\r\n        this.marvelService.getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended =false;\r\n        if(newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n        this.setState(({offset, charList}) => ({\r\n            charList: [...charList, ...newCharList],\r\n            loading: false,\r\n            newItemLoading: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }))\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    //practics for Refs\r\n    itemRefs = [];\r\n\r\n    setRef = (ref) => {\r\n        this.itemRefs.push(ref);\r\n    }\r\n\r\n    focusOnItem = (id) => {\r\n        console.log(id)\r\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\r\n        this.itemRefs[id].classList.add('char__item_selected');\r\n        this.itemRefs[id].focus();\r\n    }\r\n\r\n    renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <li \r\n                    className=\"char__item\" \r\n                    tabIndex={0}\r\n                    key={item.id} \r\n                    ref={this.setRef}\r\n                    onClick={() => {\r\n                        this.props.onCharSelected(item.id);\r\n                        this.focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            this.props.onCharSelected(item.id);\r\n                            this.focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        const {charList, loading, error, newItemLoading, offset, charEnded} = this.state;\r\n        \r\n        const items = this.renderItems(charList);\r\n        \r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? items : null;\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{'display': charEnded ? 'none' : 'block'}}\r\n                    onClick={() => this.onRequest(offset)}>\r\n                        <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{margin: '0 auto', background: 'none', display: 'flex', justifyContent: 'center'}}>\r\n            <SpinnerCircular size={60} thickness={155} speed={121} color=\"rgba(159, 0, 19, 1)\" secondaryColor=\"rgba(172, 57, 57, 0.48)\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { Component } from \"react\";\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport PropTypes from 'prop-types';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport './charInfo.scss';\r\n\r\nclass CharInfo extends Component {\r\n\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n    marvelService = new MarvelService();\r\n    \r\n    componentDidMount () {\r\n        this.updateChar();\r\n    }\r\n    \r\n    componentDidUpdate (prevProps, prevState) {\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar()\r\n        }\r\n    }\r\n    \r\n    updateChar = () => {\r\n        const {charId} = this.props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        this.onCharLoading();\r\n        this.marvelService\r\n            .getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n       \r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n    if (comics.length > 10) {\r\n        comics.length = 10\r\n    } \r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                    <div>\r\n                        <div className=\"char__info-name\">{name}</div>\r\n                        <div className=\"char__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"char__descr\">\r\n                    {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                    {comics.length > 0 ? null : \"No comics with this character\"}\r\n                    {\r\n                        comics.map((item,i) => {\r\n                            return (\r\n                                <li key={i} className=\"char__comics-item\">\r\n                                    <a href={item.resourceURI}>{item.name}</a>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }                    \r\n                </ul>\r\n        </>\r\n    )\r\n}\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{margin: 'auto', background: 'none', display: 'flex', justifyContent: 'center'}}>\r\n            <SpinnerCircular size={60} thickness={155} speed={121} color=\"rgba(159, 0, 19, 1)\" secondaryColor=\"rgba(172, 57, 57, 0.48)\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n       console.log(error, errorInfo);\r\n       this.setState({\r\n           error: true\r\n       })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children;    \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoudary/ErrorBoudary\"\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar/>\r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                            <CharList onCharSelected={this.onCharSelected}/>\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar}/>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}