{"version":3,"sources":["components/appHeader/AppHeader.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoudary/ErrorBoudary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","ErrorMessage","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","price","prices","href","resourceURI","View","imgStyle","Spinner","background","justifyContent","SpinnerCircular","size","thickness","speed","secondaryColor","RandomChar","setChar","useEffect","updateChar","console","log","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","AppBanner","avengers","avengersLogo","ComicsPage","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.601065b1.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom';\r\nimport './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link  to=\"/\">\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink end style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit'})} to=\"/\">Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink end style={({ isActive }) => ({ color: isActive ? '#9f0013' : 'inherit'})} to=\"/comics\">Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import {useHttp} from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=8af2845f0342a6f8105c592982490a5e';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(`${_apiBase}comics?issueNumber=1&orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics)\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description : char.description ? `${char.description.slice(0, 210)}...` : 'No description',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE',\r\n            thumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n            href: comics.resourceURI\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            if(!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data;\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() =>  setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst  RandomChar = () => {\r\n    \r\n    const [char, setChar] = useState(null);\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        console.log(char)\r\n        const timerId = setInterval(updateChar, 30000);\r\n\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n    }, [])\r\n\r\n    const onCharLoaded = char => setChar(char);\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        console.log(char)\r\n        getCharacter(id).then(onCharLoaded);\r\n    }    \r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n    \r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\" onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )    \r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{margin: 'auto', background: 'none', display: 'flex', justifyContent: 'center'}}>\r\n            <SpinnerCircular size={60} thickness={155} speed={121} color=\"rgba(159, 0, 19, 1)\" secondaryColor=\"rgba(172, 57, 57, 0.48)\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { SpinnerCircular } from 'spinners-react';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended =false;\r\n        if(newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setNewItemLoading(newItemLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended);\r\n    }\r\n\r\n    //practics for Refs\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <li \r\n                    className=\"char__item\" \r\n                    tabIndex={0}\r\n                    key={item.id} \r\n                    ref={el => itemRefs.current[i] = el}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(charList);\r\n    \r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    \r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': charEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{margin: '0 auto', background: 'none', display: 'flex', justifyContent: 'center'}}>\r\n            <SpinnerCircular size={60} thickness={155} speed={121} color=\"rgba(159, 0, 19, 1)\" secondaryColor=\"rgba(172, 57, 57, 0.48)\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport './charInfo.scss';\r\n\r\nconst  CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    \r\n    const {loading, error, getCharacter, clearError } = useMarvelService();\r\n    \r\n    useEffect(() => {\r\n        updateChar()\r\n    }, [props.charId])\r\n\r\n    const updateChar = () => {\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => setChar(char);\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton/>;\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                    <div>\r\n                        <div className=\"char__info-name\">{name}</div>\r\n                        <div className=\"char__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"char__descr\">\r\n                    {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                    {comics.length > 0 ? null : \"No comics with this character\"}\r\n                    {\r\n                        comics.map((item,i) => {\r\n                            return (\r\n                                <li key={i} className=\"char__comics-item\">\r\n                                    <a href={item.resourceURI}>{item.name}</a>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }                    \r\n                </ul>\r\n        </>\r\n    )\r\n}\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{margin: 'auto', background: 'none', display: 'flex', justifyContent: 'center'}}>\r\n            <SpinnerCircular size={60} thickness={155} speed={121} color=\"rgba(159, 0, 19, 1)\" secondaryColor=\"rgba(172, 57, 57, 0.48)\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n       console.log(error, errorInfo);\r\n       this.setState({\r\n           error: true\r\n       })\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        return this.props.children;    \r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoudary/ErrorBoudary\"\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n    const onCharSelected = id => setChar(id);\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useState, useEffect } from 'react';\r\nimport { SpinnerCircular } from 'spinners-react';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './comicsList.scss';\r\n\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n\r\n    const {loading, error, getAllComics} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended =false;\r\n        if(newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            return (\r\n                <li \r\n                    className=\"comics__item\"\r\n                    tabIndex={0}\r\n                    key={item.id} >\r\n                        <a href={item.href}>\r\n                            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                            <div className=\"comics__item-name\">{item.title}</div>\r\n                            <div className=\"comics__item-price\">{item.price}</div>\r\n                        </a>\r\n                </li>\r\n            )\r\n        });\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                style={{'display': comicsEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div style={{margin: '0 auto', background: 'none', display: 'flex', justifyContent: 'center'}}>\r\n            <SpinnerCircular size={60} thickness={155} speed={121} color=\"rgba(159, 0, 19, 1)\" secondaryColor=\"rgba(172, 57, 57, 0.48)\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\"\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\n\r\nimport {MainPage, ComicsPage} from \"../pages\"\r\n\r\nconst App = () =>  {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <Routes>\r\n                        <Route path='/' element={<MainPage />} />\r\n                        <Route path='/comics' element={<ComicsPage />} />\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}